!function(){"use strict";Object.defineProperties(Array.prototype,{contains:{value:function(a){return-1!==this.indexOf(a)}},excludes:{value:function(a){return-1===this.indexOf(a)}},intersect:{value:function(a){var b=this,c=[];if(is.not.array(a))throw new TypeError("array expected.");return b.forEach(function(b){a.contains(b)&&c.push(b)}),c}},unique:{value:function(){var a=[];return this.forEach(function(b){a.excludes(b)&&a.push(b)}),a}}})}(),function(){"use strict";function a(){var a,b=Object.create(Object.prototype);for(a in c)c.hasOwnProperty(a)&&Object.defineProperty(b,a,{value:c[a]});Object.defineProperty(window,"is",{value:b})}function b(){function a(a){return function(){return!a.apply(this,arguments)}}var b,d=Object.create(Object.prototype);for(b in c)c.hasOwnProperty(b)&&Object.defineProperty(d,b,{value:a(c[b])});Object.defineProperty(is,"not",{value:d})}var c={array:function(a){return a instanceof Array},complex:function(a){return is.oneOf(a,"object array")},defined:function(a){return void 0!==a},empty:function(a){var b;if(is.oneOf(a,"array string"))b=0===a.length;else{if(!is.object(a))throw new TypeError("object or array expected.");b=a.hasOwnProperty("length")?0===a.length:0===Object.getOwnPropertyNames(a).length}return b},falsy:function(a){return!!a==!1},"function":function(a){return a instanceof Function},map:function(a){return is.object(a)&&is.not.oneOf(a,"function array")},"null":function(a){return null===a},number:function(a){return"number"==typeof a},object:function(a){return a instanceof Object},oneOf:function(a,b){var c=!1;if(is.not.string(b))throw new TypeError("string expected.");return b.split(/\s+/).every(function(b){if(!is.hasOwnProperty(b))throw new ReferenceError("unrecognised type.");return"oneOf"!==b?!(c=is[b](a)):!0}),c},simple:function(a){return is.not.oneOf(a,"object array null undefined")},string:function(a){return"string"==typeof a},truthy:function(a){return!!a==!0},undefined:function(a){return void 0===a}};a(),b()}(),function(){"use strict";Object.defineProperties(Number.prototype,{inside:{value:function(a,b){if(a=a||-1/0,b=b||1/0,is.not.number(a)||is.not.number(b))throw new TypeError("number expected.");return this.valueOf()>Math.min(a,b)&&this.valueOf()<Math.max(a,b)}},integer:{value:function(){return this==Math.floor(this)}},negative:{value:function(){return 0>this}},outside:{value:function(a,b){if(a=a||-1/0,b=b||1/0,is.not.number(a)||is.not.number(b))throw new TypeError("number expected.");return this.valueOf()<Math.min(a,b)||this.valueOf()>Math.max(a,b)}},positive:{value:function(){return this>0}},rounded:{value:function(){return Math.round(this)}},zero:{value:function(){return 0===this.valueOf()}}})}(),function(){"use strict";Object.defineProperties(Object.prototype,{forEach:{value:function(a,b){function c(b){a.call(d,b,d[b])}var d=this;if(is.not.function(a))throw new TypeError("function expected.");if(b)for(var e in d)c(e);else Object.keys(d).forEach(c)}},hasntOwnProperty:{value:function(a){if(is.not.string(a)&&(is.not.number(a)||!a.integer()))throw new TypeError("string or integer expected.");return!this.hasOwnProperty(a)}}})}(),function(){"use strict";Object.defineProperties(String.prototype,{braced:{value:function(){var a={arrow:"<>",curly:"{}",round:"()",square:"[]"};return function(b){if(b=b||"round",is.not.string(b))throw new TypeError("string expected.");if(a.hasntOwnProperty(b))throw new ReferenceError("unrecognised identifier."+b);return b=a[b],b[0]+this.toString()+b[1]}}()},cssAlso:{value:function(a){if(is.not.string(a))throw new TypeError("string expected.");return this.toString()+", "+a}},cssAncestor:{value:function(a){if(is.not.string(a))throw new TypeError("string expected.");return a+" "+this.toString()}},cssAttr:{value:function(){var a={end:"$=",equal:"=",exact:"~=",start:"^=",prefix:"|="};return function(b,c){var d=[this.toString()];if(is.not.empty(arguments)){if(is.not.simple(b))throw new TypeError("simple value expected.");if(c=c||"equal",is.not.string(c))throw new TypeError("string expected.");if(a.hasntOwnProperty(c))throw new ReferenceError("unrecognised comparison");d.push(a[c]),d.push(b.toString().quoted(!0))}return d.join("").braced("square")}}()},cssChild:{value:function(a){if(is.not.string(a))throw new TypeError("string expected.");return this.toString()+" > "+a}},cssClass:{value:function(){return"."+this.toString()}},cssDescendant:{value:function(a){if(is.not.string(a))throw new TypeError("string expected.");return this.toString()+" "+a}},cssID:{value:function(){return"#"+this.toString()}},cssNot:{value:function(){return":not"+this.toString().braced()}},cssParent:{value:function(a){if(is.not.string(a))throw new TypeError("string expected.");return a+" > "+this.toString()}},cssPseudo:{value:function(){var a={active:"active",after:"after",before:"before",checked:"checked","default":"default",disabled:"disabled",empty:"empty",enabled:"enabled",firstChild:"first-child",firstLetter:"first-letter",firstLine:"first-line",firstOfType:"first-of-type",focus:"focus",hover:"hover",indeterminate:"indeterminate",inRange:"in-range",invalid:"invalid",lastChild:"last-child",lastOfType:"last-of-type",left:"left",link:"link",onlyChild:"only-child",onlyOfType:"only-of-type",optional:"optional",outOfRange:"out-of-range",readOnly:"read-only",readWrite:"read-write",required:"required",right:"right",root:"root",scope:"scope",target:"target",valid:"valid",visited:"visited"},b={lang:"lang",nthChild:"nth-child",nthLastChild:"nth-last-child",nthLastOfType:"nth-last-of-type",nthOfType:"nth-of-type"};return function(c,d){var e=this.toString()+":";if(is.not.string(c))throw new TypeError("string expected.");if(a.hasOwnProperty(c))e+=a[c];else{if(!b.hasOwnProperty(c))throw new ReferenceError("unrecognised identifier.");if(/^nth/.test(c))if(is.not.number(d)){if(d=parseInt(d,10),is.not.number(d))throw new TypeError("number expected")}else if(d.outside(1))throw new RangeError("non-negative number expected.");e+=b[c]+d.toString().braced()}return e}}()},cssRefine:{value:function(a){if(is.not.string(a))throw new TypeError("string expected.");return this.toString()+a}},cssSibling:{value:function(a,b){var c;if(is.not.string(a))throw new TypeError("string expected.");switch(b=b||"younger"){case"any":c=this.toString()+" ~ "+a;break;case"older":c=a+" + "+this.toString();break;case"younger":c=this.toString()+" + "+a;break;default:throw new ReferenceError("unrecognised identifier.")}return c}},toCamelCase:{value:function(){var a="";return this.toString().trim().split(/[^a-z0-9]+/i).forEach(function(b){b.match(/(\d+)|([A-Z]*[a-z]*)/g).forEach(function(b){is.not.empty(b)&&(a+=b[0].toUpperCase()+b.slice(1))})}),a}},toPascalCase:{value:function(){var a=this.toCamelCase();return a[0].toLowerCase()+a.slice(1)}},quoted:{value:function(a){return a=a?'"':"'",a+this.toString()+a}}})}();